# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import file_pb2 as file__pb2


class NameNodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterDataNode = channel.unary_unary(
                '/file.NameNode/RegisterDataNode',
                request_serializer=file__pb2.RegisterDataNodeRequest.SerializeToString,
                response_deserializer=file__pb2.RegisterDataNodeResponse.FromString,
                )
        self.GetFileLocation = channel.unary_unary(
                '/file.NameNode/GetFileLocation',
                request_serializer=file__pb2.GetFileLocationRequest.SerializeToString,
                response_deserializer=file__pb2.GetFileLocationResponse.FromString,
                )
        self.WriteFile = channel.unary_unary(
                '/file.NameNode/WriteFile',
                request_serializer=file__pb2.FileData.SerializeToString,
                response_deserializer=file__pb2.GetFileLocationResponse.FromString,
                )
        self.ReadFile = channel.unary_unary(
                '/file.NameNode/ReadFile',
                request_serializer=file__pb2.ReadFileRequest.SerializeToString,
                response_deserializer=file__pb2.ReadFileResponse.FromString,
                )
        self.InformFileLocation = channel.unary_unary(
                '/file.NameNode/InformFileLocation',
                request_serializer=file__pb2.InformFileLocationRequest.SerializeToString,
                response_deserializer=file__pb2.InformFileLocationResponse.FromString,
                )


class NameNodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterDataNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InformFileLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NameNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterDataNode': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterDataNode,
                    request_deserializer=file__pb2.RegisterDataNodeRequest.FromString,
                    response_serializer=file__pb2.RegisterDataNodeResponse.SerializeToString,
            ),
            'GetFileLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFileLocation,
                    request_deserializer=file__pb2.GetFileLocationRequest.FromString,
                    response_serializer=file__pb2.GetFileLocationResponse.SerializeToString,
            ),
            'WriteFile': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteFile,
                    request_deserializer=file__pb2.FileData.FromString,
                    response_serializer=file__pb2.GetFileLocationResponse.SerializeToString,
            ),
            'ReadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadFile,
                    request_deserializer=file__pb2.ReadFileRequest.FromString,
                    response_serializer=file__pb2.ReadFileResponse.SerializeToString,
            ),
            'InformFileLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.InformFileLocation,
                    request_deserializer=file__pb2.InformFileLocationRequest.FromString,
                    response_serializer=file__pb2.InformFileLocationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'file.NameNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NameNode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterDataNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/file.NameNode/RegisterDataNode',
            file__pb2.RegisterDataNodeRequest.SerializeToString,
            file__pb2.RegisterDataNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFileLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/file.NameNode/GetFileLocation',
            file__pb2.GetFileLocationRequest.SerializeToString,
            file__pb2.GetFileLocationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/file.NameNode/WriteFile',
            file__pb2.FileData.SerializeToString,
            file__pb2.GetFileLocationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/file.NameNode/ReadFile',
            file__pb2.ReadFileRequest.SerializeToString,
            file__pb2.ReadFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InformFileLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/file.NameNode/InformFileLocation',
            file__pb2.InformFileLocationRequest.SerializeToString,
            file__pb2.InformFileLocationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DataNodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StoreFile = channel.unary_unary(
                '/file.DataNode/StoreFile',
                request_serializer=file__pb2.FileData.SerializeToString,
                response_deserializer=file__pb2.StoreFileResponse.FromString,
                )
        self.ReadFile = channel.unary_unary(
                '/file.DataNode/ReadFile',
                request_serializer=file__pb2.ReadFileRequest.SerializeToString,
                response_deserializer=file__pb2.ReadFileResponse.FromString,
                )


class DataNodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StoreFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StoreFile': grpc.unary_unary_rpc_method_handler(
                    servicer.StoreFile,
                    request_deserializer=file__pb2.FileData.FromString,
                    response_serializer=file__pb2.StoreFileResponse.SerializeToString,
            ),
            'ReadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadFile,
                    request_deserializer=file__pb2.ReadFileRequest.FromString,
                    response_serializer=file__pb2.ReadFileResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'file.DataNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataNode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StoreFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/file.DataNode/StoreFile',
            file__pb2.FileData.SerializeToString,
            file__pb2.StoreFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/file.DataNode/ReadFile',
            file__pb2.ReadFileRequest.SerializeToString,
            file__pb2.ReadFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
